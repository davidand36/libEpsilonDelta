#
# SConscript
# Copyright (C) 2007 David M. Anderson
#
# SCons "makefile" for EpsilonDelta math library
#

Import( 'env' )
Import( 'useSTLport' )
if useSTLport:
    Import( 'stlportIncludeDir' )
Import( 'useBoost' )
if useBoost:
    Import( 'boostIncludeDir' )

includePath = [ '.', '#util' ]
if useSTLport:
    includePath.append( stlportIncludeDir )
if useBoost:
    includePath.append( boostIncludeDir )

sources = [ 
            'DivMod.cpp',
            'Polynomial.cpp',
            'RootFinder.cpp',
            'Angle.cpp',
            'AngleDMS.cpp',
            'AngleHMS.cpp',
            'NullVectorException.cpp',
            'SingularMatrixException.cpp',
            'Vector.cpp',
            'Vector2.cpp',
            'Matrix2.cpp',
            'RotationMatrix2.cpp',
            'Polar.cpp',
            'Vector3.cpp',
            'Matrix3.cpp',
            'RotationMatrix3.cpp',
            'Quaternion.cpp',
            'EulerAngles.cpp',
            'Spherical.cpp',
            'Vector4.cpp',
            'Matrix4.cpp',
            'Random.cpp',
            'Factorial.cpp',
            'Gamma.cpp',
            'ProbabilityDistributions.cpp',
            'StatisticalTests.cpp',
            'Permutation.cpp',
            'ODE.cpp'
          ]

lib = env.Library( 'EpsilonDelta_math', sources, CPPPATH = includePath )

Return( 'lib' )
